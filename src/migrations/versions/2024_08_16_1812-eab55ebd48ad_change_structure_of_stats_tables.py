"""change structure of stats tables

Revision ID: eab55ebd48ad
Revises: 6950a20524e4
Create Date: 2024-08-16 18:12:50.988676

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "eab55ebd48ad"
down_revision: Union[str, None] = "6950a20524e4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "english_mode_stats",
        sa.Column("stats_id", sa.Integer(), nullable=False),
    )
    op.add_column(
        "english_mode_stats",
        sa.Column("symbols_per_minute", sa.Integer(), nullable=False),
    )
    op.add_column(
        "english_mode_stats",
        sa.Column("accuracy_percentage", sa.Integer(), nullable=False),
    )
    op.drop_constraint(
        "uq_english_mode_stats_statistics_id",
        "english_mode_stats",
        type_="unique",
    )
    op.drop_constraint(
        "fk_english_mode_stats_statistics_id_statistics_data",
        "english_mode_stats",
        type_="foreignkey",
    )
    op.create_foreign_key(
        op.f("fk_english_mode_stats_stats_id_statistics_data"),
        "english_mode_stats",
        "statistics_data",
        ["stats_id"],
        ["id"],
    )
    op.drop_column("english_mode_stats", "statistics_id")
    op.drop_column(
        "english_mode_stats", "accuracy_percentage_for_each_attempt"
    )
    op.drop_column("english_mode_stats", "average_accuracy")
    op.drop_column(
        "english_mode_stats", "characters_per_minute_for_each_attempt"
    )
    op.add_column(
        "extended_mode_stats",
        sa.Column("stats_id", sa.Integer(), nullable=False),
    )
    op.add_column(
        "extended_mode_stats",
        sa.Column("symbols_per_minute", sa.Integer(), nullable=False),
    )
    op.add_column(
        "extended_mode_stats",
        sa.Column("accuracy_percentage", sa.Integer(), nullable=False),
    )
    op.drop_constraint(
        "uq_extended_mode_stats_statistics_id",
        "extended_mode_stats",
        type_="unique",
    )
    op.drop_constraint(
        "fk_extended_mode_stats_statistics_id_statistics_data",
        "extended_mode_stats",
        type_="foreignkey",
    )
    op.create_foreign_key(
        op.f("fk_extended_mode_stats_stats_id_statistics_data"),
        "extended_mode_stats",
        "statistics_data",
        ["stats_id"],
        ["id"],
    )
    op.drop_column("extended_mode_stats", "statistics_id")
    op.drop_column(
        "extended_mode_stats", "accuracy_percentage_for_each_attempt"
    )
    op.drop_column("extended_mode_stats", "average_accuracy")
    op.drop_column(
        "extended_mode_stats", "characters_per_minute_for_each_attempt"
    )
    op.add_column(
        "extreme_mode_stats",
        sa.Column("stats_id", sa.Integer(), nullable=False),
    )
    op.add_column(
        "extreme_mode_stats",
        sa.Column("symbols_per_minute", sa.Integer(), nullable=False),
    )
    op.add_column(
        "extreme_mode_stats",
        sa.Column("accuracy_percentage", sa.Integer(), nullable=False),
    )
    op.drop_constraint(
        "uq_extreme_mode_stats_statistics_id",
        "extreme_mode_stats",
        type_="unique",
    )
    op.drop_constraint(
        "fk_extreme_mode_stats_statistics_id_statistics_data",
        "extreme_mode_stats",
        type_="foreignkey",
    )
    op.create_foreign_key(
        op.f("fk_extreme_mode_stats_stats_id_statistics_data"),
        "extreme_mode_stats",
        "statistics_data",
        ["stats_id"],
        ["id"],
    )
    op.drop_column("extreme_mode_stats", "statistics_id")
    op.drop_column(
        "extreme_mode_stats", "accuracy_percentage_for_each_attempt"
    )
    op.drop_column("extreme_mode_stats", "average_accuracy")
    op.drop_column(
        "extreme_mode_stats", "characters_per_minute_for_each_attempt"
    )
    op.add_column(
        "standard_mode_stats",
        sa.Column("stats_id", sa.Integer(), nullable=False),
    )
    op.add_column(
        "standard_mode_stats",
        sa.Column("symbols_per_minute", sa.Integer(), nullable=False),
    )
    op.add_column(
        "standard_mode_stats",
        sa.Column("accuracy_percentage", sa.Integer(), nullable=False),
    )
    op.drop_constraint(
        "uq_standard_mode_stats_statistics_id",
        "standard_mode_stats",
        type_="unique",
    )
    op.drop_constraint(
        "fk_standard_mode_stats_statistics_id_statistics_data",
        "standard_mode_stats",
        type_="foreignkey",
    )
    op.create_foreign_key(
        op.f("fk_standard_mode_stats_stats_id_statistics_data"),
        "standard_mode_stats",
        "statistics_data",
        ["stats_id"],
        ["id"],
    )
    op.drop_column("standard_mode_stats", "statistics_id")
    op.drop_column(
        "standard_mode_stats", "accuracy_percentage_for_each_attempt"
    )
    op.drop_column("standard_mode_stats", "average_accuracy")
    op.drop_column(
        "standard_mode_stats", "characters_per_minute_for_each_attempt"
    )
    op.add_column(
        "text_mode_stats", sa.Column("stats_id", sa.Integer(), nullable=False)
    )
    op.add_column(
        "text_mode_stats",
        sa.Column("symbols_per_minute", sa.Integer(), nullable=False),
    )
    op.add_column(
        "text_mode_stats",
        sa.Column("accuracy_percentage", sa.Integer(), nullable=False),
    )
    op.drop_constraint(
        "uq_text_mode_stats_statistics_id", "text_mode_stats", type_="unique"
    )
    op.drop_constraint(
        "fk_text_mode_stats_statistics_id_statistics_data",
        "text_mode_stats",
        type_="foreignkey",
    )
    op.create_foreign_key(
        op.f("fk_text_mode_stats_stats_id_statistics_data"),
        "text_mode_stats",
        "statistics_data",
        ["stats_id"],
        ["id"],
    )
    op.drop_column("text_mode_stats", "statistics_id")
    op.drop_column("text_mode_stats", "accuracy_percentage_for_each_attempt")
    op.drop_column("text_mode_stats", "average_accuracy")
    op.drop_column("text_mode_stats", "characters_per_minute_for_each_attempt")
    op.add_column(
        "user_mode_stats", sa.Column("stats_id", sa.Integer(), nullable=False)
    )
    op.add_column(
        "user_mode_stats",
        sa.Column("symbols_per_minute", sa.Integer(), nullable=False),
    )
    op.add_column(
        "user_mode_stats",
        sa.Column("accuracy_percentage", sa.Integer(), nullable=False),
    )
    op.drop_constraint(
        "uq_user_mode_stats_statistics_id", "user_mode_stats", type_="unique"
    )
    op.drop_constraint(
        "fk_user_mode_stats_statistics_id_statistics_data",
        "user_mode_stats",
        type_="foreignkey",
    )
    op.create_foreign_key(
        op.f("fk_user_mode_stats_stats_id_statistics_data"),
        "user_mode_stats",
        "statistics_data",
        ["stats_id"],
        ["id"],
    )
    op.drop_column("user_mode_stats", "statistics_id")
    op.drop_column("user_mode_stats", "accuracy_percentage_for_each_attempt")
    op.drop_column("user_mode_stats", "average_accuracy")
    op.drop_column("user_mode_stats", "characters_per_minute_for_each_attempt")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "user_mode_stats",
        sa.Column(
            "characters_per_minute_for_each_attempt",
            postgresql.ARRAY(sa.INTEGER()),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "user_mode_stats",
        sa.Column(
            "average_accuracy",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "user_mode_stats",
        sa.Column(
            "accuracy_percentage_for_each_attempt",
            postgresql.ARRAY(sa.INTEGER()),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "user_mode_stats",
        sa.Column(
            "statistics_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(
        op.f("fk_user_mode_stats_stats_id_statistics_data"),
        "user_mode_stats",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_user_mode_stats_statistics_id_statistics_data",
        "user_mode_stats",
        "statistics_data",
        ["statistics_id"],
        ["user_id"],
    )
    op.create_unique_constraint(
        "uq_user_mode_stats_statistics_id",
        "user_mode_stats",
        ["statistics_id"],
    )
    op.drop_column("user_mode_stats", "accuracy_percentage")
    op.drop_column("user_mode_stats", "symbols_per_minute")
    op.drop_column("user_mode_stats", "stats_id")
    op.add_column(
        "text_mode_stats",
        sa.Column(
            "characters_per_minute_for_each_attempt",
            postgresql.ARRAY(sa.INTEGER()),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "text_mode_stats",
        sa.Column(
            "average_accuracy",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "text_mode_stats",
        sa.Column(
            "accuracy_percentage_for_each_attempt",
            postgresql.ARRAY(sa.INTEGER()),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "text_mode_stats",
        sa.Column(
            "statistics_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(
        op.f("fk_text_mode_stats_stats_id_statistics_data"),
        "text_mode_stats",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_text_mode_stats_statistics_id_statistics_data",
        "text_mode_stats",
        "statistics_data",
        ["statistics_id"],
        ["user_id"],
    )
    op.create_unique_constraint(
        "uq_text_mode_stats_statistics_id",
        "text_mode_stats",
        ["statistics_id"],
    )
    op.drop_column("text_mode_stats", "accuracy_percentage")
    op.drop_column("text_mode_stats", "symbols_per_minute")
    op.drop_column("text_mode_stats", "stats_id")
    op.add_column(
        "standard_mode_stats",
        sa.Column(
            "characters_per_minute_for_each_attempt",
            postgresql.ARRAY(sa.INTEGER()),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "standard_mode_stats",
        sa.Column(
            "average_accuracy",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "standard_mode_stats",
        sa.Column(
            "accuracy_percentage_for_each_attempt",
            postgresql.ARRAY(sa.INTEGER()),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "standard_mode_stats",
        sa.Column(
            "statistics_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(
        op.f("fk_standard_mode_stats_stats_id_statistics_data"),
        "standard_mode_stats",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_standard_mode_stats_statistics_id_statistics_data",
        "standard_mode_stats",
        "statistics_data",
        ["statistics_id"],
        ["user_id"],
    )
    op.create_unique_constraint(
        "uq_standard_mode_stats_statistics_id",
        "standard_mode_stats",
        ["statistics_id"],
    )
    op.drop_column("standard_mode_stats", "accuracy_percentage")
    op.drop_column("standard_mode_stats", "symbols_per_minute")
    op.drop_column("standard_mode_stats", "stats_id")
    op.add_column(
        "extreme_mode_stats",
        sa.Column(
            "characters_per_minute_for_each_attempt",
            postgresql.ARRAY(sa.INTEGER()),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "extreme_mode_stats",
        sa.Column(
            "average_accuracy",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "extreme_mode_stats",
        sa.Column(
            "accuracy_percentage_for_each_attempt",
            postgresql.ARRAY(sa.INTEGER()),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "extreme_mode_stats",
        sa.Column(
            "statistics_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(
        op.f("fk_extreme_mode_stats_stats_id_statistics_data"),
        "extreme_mode_stats",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_extreme_mode_stats_statistics_id_statistics_data",
        "extreme_mode_stats",
        "statistics_data",
        ["statistics_id"],
        ["user_id"],
    )
    op.create_unique_constraint(
        "uq_extreme_mode_stats_statistics_id",
        "extreme_mode_stats",
        ["statistics_id"],
    )
    op.drop_column("extreme_mode_stats", "accuracy_percentage")
    op.drop_column("extreme_mode_stats", "symbols_per_minute")
    op.drop_column("extreme_mode_stats", "stats_id")
    op.add_column(
        "extended_mode_stats",
        sa.Column(
            "characters_per_minute_for_each_attempt",
            postgresql.ARRAY(sa.INTEGER()),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "extended_mode_stats",
        sa.Column(
            "average_accuracy",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "extended_mode_stats",
        sa.Column(
            "accuracy_percentage_for_each_attempt",
            postgresql.ARRAY(sa.INTEGER()),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "extended_mode_stats",
        sa.Column(
            "statistics_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(
        op.f("fk_extended_mode_stats_stats_id_statistics_data"),
        "extended_mode_stats",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_extended_mode_stats_statistics_id_statistics_data",
        "extended_mode_stats",
        "statistics_data",
        ["statistics_id"],
        ["user_id"],
    )
    op.create_unique_constraint(
        "uq_extended_mode_stats_statistics_id",
        "extended_mode_stats",
        ["statistics_id"],
    )
    op.drop_column("extended_mode_stats", "accuracy_percentage")
    op.drop_column("extended_mode_stats", "symbols_per_minute")
    op.drop_column("extended_mode_stats", "stats_id")
    op.add_column(
        "english_mode_stats",
        sa.Column(
            "characters_per_minute_for_each_attempt",
            postgresql.ARRAY(sa.INTEGER()),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "english_mode_stats",
        sa.Column(
            "average_accuracy",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "english_mode_stats",
        sa.Column(
            "accuracy_percentage_for_each_attempt",
            postgresql.ARRAY(sa.INTEGER()),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "english_mode_stats",
        sa.Column(
            "statistics_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(
        op.f("fk_english_mode_stats_stats_id_statistics_data"),
        "english_mode_stats",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_english_mode_stats_statistics_id_statistics_data",
        "english_mode_stats",
        "statistics_data",
        ["statistics_id"],
        ["user_id"],
    )
    op.create_unique_constraint(
        "uq_english_mode_stats_statistics_id",
        "english_mode_stats",
        ["statistics_id"],
    )
    op.drop_column("english_mode_stats", "accuracy_percentage")
    op.drop_column("english_mode_stats", "symbols_per_minute")
    op.drop_column("english_mode_stats", "stats_id")
    # ### end Alembic commands ###
